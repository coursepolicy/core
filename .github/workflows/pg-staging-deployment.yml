name: 'Deploy Policy Generator to Staging'

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  AWS_ACCOUNT_ID_STAGING: ${{ secrets.AWS_ACCOUNT_ID_STAGING }}

concurrency: merge-${{ github.ref }}

permissions:
  id-token: write
  contents: read

jobs:
  staging_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID_STAGING }}:role/${{ secrets.AWS_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch env var values from aws
        run: |
          echo "SURVEY_URL=$(aws ssm get-parameter --name survey-url --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "LAMBDAS_API_BASE_URL=$(aws ssm get-parameter --name lambdas-base-url --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "SAMPLE_PDF_URL=$(aws ssm get-parameter --name sample-pdf-url --query Parameter.Value --output text)" >> $GITHUB_ENV

      - name: Deploy app to staging
        working-directory: ./apps/policy-generator
        run: |
          yarn sst deploy --stage staging
